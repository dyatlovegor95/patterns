Шаблон проектирования или паттерн (англ. design pattern) в разработке программного обеспечения — повторяемая архитектурная конструкция,
представляющая собой решение проблемы проектирования в рамках некоторого часто возникающего контекста.

Обычно шаблон не является законченным образцом, который может быть прямо преобразован в код; это лишь пример решения задачи,
который можно использовать в различных ситуациях.
Объектно-ориентированные шаблоны показывают отношения и взаимодействия между классами или объектами,
без определения того, какие конечные классы или объекты приложения будут использоваться.

«Низкоуровневые» шаблоны, учитывающие специфику конкретного языка программирования, называются идиомами.
Это хорошие решения проектирования, характерные для конкретного языка или программной платформы, и потому не универсальные.

На наивысшем уровне существуют архитектурные шаблоны, они охватывают собой архитектуру всей программной системы.

Алгоритмы по своей сути также являются шаблонами, но не проектирования, а вычисления, так как решают вычислительные задачи.

................................................................................................................................................
................................................................................................................................................


В JS ЭТИ ПАТТЕРНЫ УСЛОВНО МОЖНО ПОДЕЛИТЬ НА ТРИ ГРУППЫ: 

1. Creational (создающие) desing patterns - паттерны, которые позволяют создавать классы, объекты, а также дают возможность управлять процессом создания.

2. Structural (стукртурные) desing patterns - паттерны, которые позволяют добавлять новый функионал классам и объектам в большой системе, 
не ломая правила этой системы, дают возможность выстроить более эфективную комуникацию, между различными объектами.

3. Behavioral (поведенеческие) design patterns - паттерны, которые позволяют налаживать комуникацию между различными
классами, объектами, сущностями, API, версиями, вообщем налаживать комуникацию между различными типами


................................................................................................................................................
................................................................................................................................................
